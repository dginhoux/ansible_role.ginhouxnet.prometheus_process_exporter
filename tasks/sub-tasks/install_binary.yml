---
- name: "check current {{ prometheus_process_exporter_name }} version"
  stat:
    path: "{{ prometheus_process_exporter_bin_path }}"
  failed_when: false
  changed_when: false
  register: prometheus_process_exporter_bin_stat

- name: "check current {{ prometheus_process_exporter_name }} version"
  command: "{{ prometheus_process_exporter_bin_path }} --version"
  failed_when: false
  changed_when: false
  register: prometheus_process_exporter_version_check
  when: prometheus_process_exporter_bin_stat.stat.exists

- name: "stop {{ prometheus_process_exporter_name }}"
  service:
    name: "{{ prometheus_process_exporter_name }}"
    state: stopped
    enabled: no
  when: prometheus_process_exporter_bin_stat.stat.exists

- name: "download and decompress {{ prometheus_process_exporter_name }} into temporary location"
  unarchive:
    src: "{{ prometheus_process_exporter_download_url }}"
    dest: /tmp
    remote_src: true
  when: not prometheus_process_exporter_bin_stat.stat.exists
        or 
        prometheus_process_exporter_version_check.stdout is not defined
        or
        prometheus_process_exporter_version not in prometheus_process_exporter_version_check.stdout

- name: "move {{ prometheus_process_exporter_name }} binary into place"
  copy:
    src: "/tmp/{{ prometheus_process_exporter_name }}-{{ prometheus_process_exporter_version }}.linux-{{ prometheus_process_exporter_arch }}/{{ prometheus_process_exporter_name }}"
    dest: "{{ prometheus_process_exporter_bin_path }}"
    mode: 0755
    remote_src: true
  when: not prometheus_process_exporter_bin_stat.stat.exists
        or 
        prometheus_process_exporter_version_check.stdout is not defined
        or
        prometheus_process_exporter_version not in prometheus_process_exporter_version_check.stdout

- name: "create {{ prometheus_process_exporter_name }} user"
  user:
    name: "{{ prometheus_process_exporter_name }}"
    shell: /sbin/nologin
    state: present

- name: "create {{ prometheus_process_exporter_name }} systemd unit file"
  template:
    src: exporter.service.j2
    dest: /etc/systemd/system/{{ prometheus_process_exporter_name }}.service
    mode: 0644
    owner: root
    group: root
  when: ansible_service_mgr == "systemd"

- name: "create {{ prometheus_process_exporter_name }} sysv init file"
  template:
    src: exporter.j2
    dest: /etc/init.d/{{ prometheus_process_exporter_name }}
    mode: 0644
    owner: root
    group: root
  when: ansible_service_mgr == "sysvinit"

# - name: "sysvinit enable"
#   shell:
#     cmd: "chkconfig {{ prometheus_process_exporter_name }} on"
#   when: ansible_service_mgr == "sysvinit"

- name: "systemd daemon-reload"
  systemd:
    daemon_reload: true
  when: ansible_service_mgr == "systemd"

- name: "ensure {{ prometheus_process_exporter_name }} is started"
  service:
    name: "{{ prometheus_process_exporter_name }}"
    enabled: yes
    state: started
